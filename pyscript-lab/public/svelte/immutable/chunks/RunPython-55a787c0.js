const n=c=>{let t={py_div:null,output_div:null,runScript:(o,e,r)=>{t._run(o,e,{script:!0,createOutputDiv:r})},runCode:(o,e,r)=>{t._run(o,e,{script:!1,createOutputDiv:r})},runCodeOnScript:(o,e,r,i)=>{t._run(o,r,{script:!0,scriptPath:e,createOutputDiv:i})},createOutput:o=>{let e=document.createElement("div");return e.id=o,console.log("py_output",e),document.body.appendChild(e),e},_run:(o,e,r)=>{console.log("!!!"),console.log("RUN"),console.log("RUN"),console.log("RUN"),console.log("RUN"),console.log("!!!");try{console.log("_run",r),r.createOutputDiv?(console.log("creating output tag"),t.output_div=t.createOutput(e)):(console.log("reusing output tag"),t.output_div=document.getElementById(e)),console.log(" pyRunner.output_div",t.output_div),t.run(o,t.output_div,r)}catch(i){t.clearPyDiv(),console.error("RunScript",i)}},run:(o,e,r)=>{let i=`<py-script output="${e.id}">${o}</py-script>`;r&&r.script&&(r.scriptPath?i=`<py-script output="${e.id}" id="${e.id}_script">${o}</py-script>`:i=`<py-script output="${e.id}" id="${e.id}_script" src="${o}"></py-script>`),console.log("tag",i);let u=document.createElement("div");u.innerHTML=i,console.log("div",u),t.py_div=u.firstElementChild,console.log("py_div",t.py_div),document.body.appendChild(t.py_div);try{console.log("evaluates",t.py_div),t.py_div.evaluate()}catch(l){throw t.clearPyDiv(),console.error("Python error:"),console.error(l),l}},clearPyDiv:()=>{t.py_div&&(t.py_div.remove(),t.py_div=null)},clearOutput:()=>{t.output_div&&(t.output_div.remove(),t.output_div=null)},destroy:o=>{o&&t.clearOutput(),t.clearPyDiv()}};return t};export{n as R};
